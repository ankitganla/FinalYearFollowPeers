@{
    FollowPeers.Models.FollowPeersDBEntities followPeersDB = new FollowPeers.Models.FollowPeersDBEntities();
    string name1 = Membership.GetUser().UserName;
    FollowPeers.Models.UserProfile myprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserName == name1);
    var profileUserName = myprofile.UserName;
    var name = ViewData["Name"];

    if (name == null) { name = myprofile.FirstName + " " + myprofile.LastName; }

    var photourl = ViewData["PhotoUrl"];
    int myself = 0;
    if (photourl == null) { myself = 1; } //if cannot read from ViewData, I am viewing my own profile
    if (photourl == null) { photourl = myprofile.PhotoUrl; }

    var Myself = ViewData["Myself"];
    if (Myself != null && (int)Myself == 1) { myself = 1; }
    if (Myself != null && (int)Myself == 0) { myself = 0; }

    var profilename = ViewData["ProfileName"];
    if (profilename == null) { profilename = myprofile.UserProfileId; }

    <div class="span2" style="margin-left: 0px;">
        <!--<div class="span2"><div class="hero-unit"></div></div>-->
        <div class="thumbnail" style="text-align: center;">
            <a href="../../Profile/Index/@profilename">
                <img src="@Html.Encode(photourl)" class="img" alt=""/></a>
            <h4 style="margin-bottom: 0">@name</h4>
            @if (myself == 1)
            {
                <a style="position: relative; top: 10px; margin-bottom: -15px; width: 80%; font-size: x-small; color: #45aeea;">Change Profile Photo</a>
                <form action="/Profile/UploadProfilePhoto" enctype="multipart/form-data" method="post" style="margin: 0;">
                    <input type='file' name='files' id='files' onchange="this.form.submit()" style="position: relative; left: 0px; top: -15px; width: 150px; height: 30px; opacity: 0; cursor: pointer" />
                </form>                
            }
        </div>

        @{
            char[] delimiterChars = { ' ' };
            string name2 = name.ToString();

            string[] firstname = name2.Split(delimiterChars);
        }

    </div>
}
