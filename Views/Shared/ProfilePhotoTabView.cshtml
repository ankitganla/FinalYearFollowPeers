@model FollowPeers.Models.UserProfile 
@{
    ViewBag.Title = @Model.FirstName + " " + @Model.LastName + " Update Files and Publications";
}
@Html.Partial("_Header")
<div class="container">

    <div class="upload_file span9 main-content">

        <div class="row">
            @using (Html.BeginForm("UploadPhotoFile", "Profile", FormMethod.Post, new { @encType = "multipart/form-data", @name = "files" }))
            {
                <h3 style="display:inline-block;">@Html.Raw(Model.FirstName)'s Photos</h3>
                <div style="display:inline-block; float:right;">
                <a class="btn btn-primary" style="position: relative; top: 10px;">Add New</a>
                <input type='file' multiple name='files' id='files' onchange="this.form.submit()" style="position: relative; left: -85px; top: 10px; width: 80px; height: 30px; opacity: 0;" />   
            </div>
                    }
        </div>

        <div class="row">

            @using (Html.BeginForm("UploadFile", "Profile", FormMethod.Post, new { @encType = "multipart/form-data" }))
            {
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.UserProfileId)
                @Html.HiddenFor(model => model.UserName)
                @Html.HiddenFor(model => model.activated)


           
            

                <div>


                    @{
                string path = HttpRuntime.AppDomainAppPath;
                string newpath = path + "\\Content\\Files\\";
                string userpath = newpath + Model.UserName + "\\Photos\\";
                var directoryInfo = new DirectoryInfo(userpath);
                if (directoryInfo.Exists)
                {
                    string[] photoFiles = Directory.GetFiles(userpath);
                    if (photoFiles == null || photoFiles.Length == 0)
                    {
                                
                        <p>There are no uploaded files</p>
                                    
                    }

                    else
                    {
                        foreach (string fileName in photoFiles)
                        {
                            string[] justFiles = fileName.Split('\\');
                            string displayName = justFiles[justFiles.Length - 1];
                         
                        <div class="span2">
                            <p>
                                <a href="">
                                    <img src="filename" style="width: 200px; height: 200px;" /></a>
                            </p>
                            <p>
                                @Html.Raw(displayName)
                                @Html.ActionLink("Download", "Download", new { downloadPath = newpath + Model.UserName + "\\" + fileName })
                                @Html.ActionLink("Delete", "Delete_File", new { delPath = fileName })
                            </p>
                        </div>;

                        }
                    }
                }

                else
                {
                        <p>There are no uploaded files</p> 
                }
                    }
                </div>
    
            }
        </div>
    </div>
</div>


