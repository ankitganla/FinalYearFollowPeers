@model IEnumerable<FollowPeers.Models.Jobs>
@using FollowPeers.Models;
@Html.Partial("_Header")
@{
    ViewBag.Title = "Jobs";
    FollowPeers.Models.FollowPeersDBEntities followPeersDB = new FollowPeers.Models.FollowPeersDBEntities();
    string name = Membership.GetUser().UserName;
    ViewBag.UserName = name;
    FollowPeers.Models.UserProfile myprofile = followPeersDB.UserProfiles.First(p => p.UserName == name);
    string firstName = myprofile.FirstName;
    List<FollowPeers.Models.Jobs> UploadedJob = new List<FollowPeers.Models.Jobs>();
    UploadedJob = followPeersDB.Jobs.Where(p => p.ownerID == myprofile.UserProfileId).ToList();
    List<Jobs> Appliedjobs = new List<FollowPeers.Models.Jobs>();
    Appliedjobs = myprofile.AppliedJobs.ToList();


    List<FollowPeers.Models.Jobs> SavedList = new List<FollowPeers.Models.Jobs>();
    List<FollowPeers.Models.Favourite> Savedjobs = followPeersDB.Favourites.Where(p => p.UserProfile.UserProfileId == myprofile.UserProfileId && p.ItemType == 4).ToList();

    Jobs temp2 = new Jobs();
    if (Savedjobs.Count() != 0)
    {
        foreach (var id in Savedjobs)
        {
            temp2 = followPeersDB.Jobs.SingleOrDefault(p => p.JobId == id.ItemTypeId);
            SavedList.Add(temp2);
        }

    }
     
}
<head>
    <title>Jobs Tab</title>
    <style media="screen" type="text/css">
        .profilepagetabs ul
        {
            padding: 0px;
            margin: 0px;
            margin-left: 0px;
            width: 180px;
        }

            .profilepagetabs ul li
            {
                display: block;
                height: auto;
                width: 180px;
                text-align: center;
                padding-top: 2px;
                padding-bottom: 2px;
            }

                .profilepagetabs ul li a
                {
                    /* The following four lines are to make the top left and top right corners of the content area rounded. */
                    -moz-border-radius-topleft: 4px;
                    border-top-left-radius: 4px;
                    -moz-border-radius-topright: 4px;
                    border-top-right-radius: 4px;
                    -moz-border-radius-bottomleft: 4px;
                    border-bottom-left-radius: 4px;
                    -moz-border-radius-bottomright: 4px;
                    border-bottom-right-radius: 4px;
                    margin-left: 0px;
                    padding-left: 10px;
                    padding-right: 10px;
                    border: solid;
                    border-width: 1px;
                    border-color: #45aeea;
                    font-weight: bold;
                    color: #45aeea;
                }

                    .profilepagetabs ul li a:hover
                    {
                        text-decoration: underline;
                    }


        .profilepagetabs li.current a
        {
            background-color: #45aeea;
            color: white;
        }
    </style>
</head>

<div class="container">
    <div class="span8 main-content">
        <div class="tab-content">

            <div id="uploadedJobs" style="display: block">
                @{ 
                    if (UploadedJob.Count() != 0)
                    {
                    <span class="label label-info">No. of Jobs Hiring: @UploadedJob.Count()</span>
                    <table class="span7">
                        @foreach (var item in UploadedJob)
                        {
                            <tr>
                                <td>
                                    <div style="border-bottom: 1px solid grey; margin: 10px 0px;">
                                        <div style="margin-left: 8px;">
                                            <a href="/Jobs/Details/@item.JobId" id="title"><b>@item.Title</b></a>
                                        </div>
                                        <div style="margin-left: 8px; float: left;">
                                            <b>Company: @item.Company    |   Location: @item.Country   |  Apply By: @item.publishDate</b>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </table>
                    }
                    else
                    {
                    <span class="label label-info">No jobs recruiting</span><br />
                    }
                }
            </div>

            <div id="appliedJobs" style="display: none;">
                @{ 
                    if (Appliedjobs.Count() != 0)
                    {
                    <span class="label label-info">No. of Jobs Hiring: @Appliedjobs.Count()</span>
                    <table class="span7">
                        @foreach (var item in Appliedjobs)
                        {
                            <tr>
                                <td>
                                    <div style="border-bottom: 1px solid grey; margin: 10px 0px;">
                                        <div style="margin-left: 8px;">
                                            <a href="/Jobs/Details/@item.JobId" id="title"><b>@item.Title</b></a>
                                        </div>
                                        <div style="margin-left: 8px; float: left;">
                                            <b>Company: @item.Company    |   Location: @item.Country</b>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </table>
                    }
                    else
                    {
                    <span class="label label-info">No jobs applied</span><br />
                    }
                }
            </div>

            <div id="savedJobs" style="display: none;">
                @{ 
                    if (SavedList.Count() != 0)
                    {
                    <span class="label label-info">No. of Jobs Hiring: @SavedList.Count()</span>
                    <table class="span7">
                        @foreach (var item in SavedList)
                        {
                            <tr>
                                <td>
                                    <div style="border-bottom: 1px solid grey; margin: 10px 0px;">
                                        <div style="margin-left: 8px;">
                                            <a href="/Jobs/Details/@item.JobId" id="title"><b>@item.Title</b></a>
                                        </div>
                                        <div style="margin-left: 8px; float: left;">
                                            <b>Company: @item.Company    |   Location: @item.Country   |  Apply By: @item.publishDate</b>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </table>
                    }
                    else
                    {
                    <span class="label label-info">No saved jobs</span><br />
                    }
                }
            </div>

            <div id="searchJobs" style="display: none">
                <div class="form-search">
                    <input type="text" id="keyword_string" class="input-medium search-query span4" />
                    <a id="Search_Job" class="btn btn-danger">Search</a>&nbsp;&nbsp;
                                <a id="trigger">Advanced Search</a>
                    <div id="toolWrapper" style="display: none; top: -7px;">
                        <div style="padding: 7px; color: #777; background: #ddd; width: 100%; margin: 3px;">
                            Advanced Job Search
                        </div>
                        <form action="Index" style="padding: 7px;">
                            <div class="editor-label" style="color: blue; font-weight: bold;">
                                Keywords
                            </div>
                            <input id="keywordstring" name="keywords" type="text" name="sort" style="width: 250px" />
                            <div class="editor-label" style="color: blue; font-weight: bold;">
                                Job Title
                            </div>
                            <input type="text" id="jobtitlestring" style="width: 250px" />
                            <div class="editor-label" style="color: blue; font-weight: bold;">
                                Country
                            </div>
                            <div class="editor-field" style="height: auto">
                                @{
                                    List<SelectListItem> items = new List<SelectListItem>();
                                    foreach (var i in followPeersDB.Countries)
                                    {
                                        items.Add(new SelectListItem { Text = i.Name, Value = i.Name });
                                    }
                                    IEnumerable<SelectListItem> list = items.ToArray();
                                    @Html.DropDownList("Country", list, new { id = "countrystring", style = "width:257px;" });
                             
                                }
                            </div>
                            <div class="editor-label" style="color: blue; font-weight: bold;">
                                Specialization
                            </div>
                            <div class="editor-field" style="height: auto">
                                @{
                                    List<SelectListItem> items2 = new List<SelectListItem>();
                                    List<FollowPeers.Models.Specialization> temp = followPeersDB.Specializations.ToList();
                                    var newlist = temp.OrderBy(x => x.SpecializationName).ToList();
                                    items2.Add(new SelectListItem { Text = "Any Specialization", Value = "Any" });
                                    foreach (var i in newlist)
                                    {
                                        items2.Add(new SelectListItem { Text = i.SpecializationName, Value = i.SpecializationName });
                                    }
                                    IEnumerable<SelectListItem> list2 = items2.ToArray();
                                    @Html.DropDownList("Specialization", list2, new { id = "specialisationstring", style = "width:257px;" });
                             
                                }
                            </div>
                            <input id="AdvanceSearch" class="btn btn-danger span1" style="float: right;" value="Submit" /><br />
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="span2 profilepagetabs">
        <ul class="menu nav nav-tabs nav-stacked" style="list-style: none; margin-top: 15px;">
            <li class="current" id="li_uploadedJobs" onclick="JSTabs('uploadedJobs')"><a>Hiring</a></li>
            <li id="li_appliedJobs" onclick="JSTabs('appliedJobs')"><a>Applied Jobs</a></li>
            <li id="li_savedJobs" onclick="JSTabs('savedJobs')"><a>Saved Jobs</a></li>
            <li id="li_searchJobs" onclick="JSTabs('searchJobs')"><a>Search Jobs</a></li>
        </ul>
    </div>

</div>
@helper Script(string scriptName)
{
    <script src="@Url.Content("~/Scripts/" + scriptName)" type="text/javascript"></script>
}
<script type="text/javascript">

    function JSTabs(tab) {
        document.getElementById('uploadedJobs').style.display = 'none';
        document.getElementById('appliedJobs').style.display = 'none';
        document.getElementById('savedJobs').style.display = 'none';
        document.getElementById('searchJobs').style.display = 'none';

        document.getElementById('li_uploadedJobs').setAttribute("class", "");
        document.getElementById('li_appliedJobs').setAttribute("class", "");
        document.getElementById('li_savedJobs').setAttribute("class", "");
        document.getElementById('li_searchJobs').setAttribute("class", "");
        
        document.getElementById(tab).style.display = 'block';
        document.getElementById('li_' + tab).setAttribute("class", "current");
    }

    $(document).ready(function () {

        $("#trigger").click(function () {
            $('#toolWrapper').toggle(function () {
                $(document).click(function (event) {
                    if (!($(event.target).is('#toolWrapper') || $(event.target).parents('#toolWrapper').length || $(event.target).is('#trigger'))) {
                        $('#toolWrapper').hide(500);
                    }
                });
            });
        });

        $("#Search_Job").click(function () {
            // Get publication ID
            var keyword = $("#keyword_string").val();
            // Send Ajax Request
            $.ajax({
                type: "POST",
                url: "/Jobs/SearchTemp",
                data: "ID=" + keyword,
                success: function () {
                    var link = "@Url.Action("SearchJob", "Jobs", null)";
                    window.location.href = link;
                }
            });
        });

        $("#AdvanceSearch").click(function () {
            var keyword_string = $("#keywordstring").val();
            var jobtitle_string = $("#jobtitlestring").val();
            var country_string = $("#countrystring").val();
            $.ajax({
                type: "POST",
                url: "/Jobs/AdvanceTemp",
                data: { id: keyword_string, jobtitle: jobtitle_string, country: country_string },
                success: function () {
                    var link = "@Url.Action("AdvanceSearch", "Jobs", null)";
                    window.location.href = link;
                }
            });
        });

    });



</script>

