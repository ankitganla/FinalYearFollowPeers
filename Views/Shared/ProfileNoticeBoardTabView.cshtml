@model FollowPeers.Models.UserProfile
@using FollowPeers.Models;
@{
    //at first, assume must check credentials, and assume all show is false.
    ViewBag.Title = "ProfileNoticeBoardTabView";
    bool toCheck = true;
    bool showEmail = false;
    bool showPhone = false;
    bool showMobile = false;
    bool showAddress = false;
    bool showEducation = false;
    bool showPublication = false;
    bool showPatent = false;
    bool showAboutMe = false;
    bool showCourse = false;
    bool showEmployment = false;
    bool showNoticeBoard = false;
    FollowPeers.Models.FollowPeersDBEntities followPeersDB = new FollowPeers.Models.FollowPeersDBEntities();
    List<FollowPeers.Models.Achievement> myAchievements = followPeersDB.Achievements.Where(p => p.UserProfileId == Model.UserProfileId).ToList();
}

@if (Membership.GetUser().UserName == Model.UserName)
{
    toCheck = false; //if you are viewing your own profile, no need to check privacy
}
@{
    //tocheck true means this is not your profile
    if (toCheck == true)
    {
        string membername = Membership.GetUser().UserName;


        IQueryable<int> custQuery = from cust in followPeersDB.Relationships where cust.personAName == membername && cust.personBName == Model.UserName select cust.tier;

        //if such a member exists in the relationships, we can proceed to check access
        if (custQuery.Count() != 0)
        {
            //check if the user has tier1 access for the information of the profile
            foreach (int tier in custQuery)
            {
                FollowPeers.Models.Tier temp = Model.Tiers.SingleOrDefault(p => p.Level == tier);
                if (temp.Email == 1) { showEmail = true; }
                if (temp.Phone == 1) { showPhone = true; }
                if (temp.Mobile == 1) { showMobile = true; }
                if (temp.Address == 1) { showAddress = true; }
                if (temp.Education == 1) { showEducation = true; }
                if (temp.Publication == 1) { showPublication = true; }
                if (temp.Patent == 1) { showPatent = true; }
                if (temp.AboutMe == 1) { showAboutMe = true; }
                if (temp.Employment == 1) { showEmployment = true; }
                if (temp.Noticeboard == 1) { showNoticeBoard = true; }
            }
        }

        //else (meaning public view.. so check if the user has declared the information as public, or tier1. tier1 means must have access to see)
        //notice board will not be visible to someone not in the peers
        else
        {
            FollowPeers.Models.Tier temp = Model.Tiers.SingleOrDefault(p => p.Level == 1);
            if (temp.Email == 1) { showEmail = true; }
            if (temp.Phone == 1) { showPhone = true; }
            if (temp.Mobile == 1) { showMobile = true; }
            if (temp.Address == 1) { showAddress = true; }
            if (temp.Education == 1) { showEducation = true; }
            if (temp.Publication == 1) { showPublication = true; }
            if (temp.Patent == 1) { showPatent = true; }
            if (temp.AboutMe == 1) { showAboutMe = true; }
            if (temp.Employment == 1) { showEmployment = true; }

        }
    } 
}


<div id="noticeboard" style="display: block;">
    @{
        string name = Membership.GetUser().UserName;
        FollowPeers.Models.UserProfile myprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserName == name);
        int count = 0;
        if (toCheck == false || showNoticeBoard == true)
        {
            if (Model.Updates != null)
            {
                var newList = Model.Updates.OrderByDescending(x => x.Time).ToList();

                foreach (var currentUpdate in newList)
                {
                    //need to display only own's updates
                    if (currentUpdate.Own == true)
                    {

                        UserProfile userprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserProfileId == currentUpdate.owner);
        <div style="border-bottom: 1px solid #eee; margin: 10px 0px; padding-top: 15px; padding-bottom: 5px; width: 100%">
            <div style="float: left; height: 50px; overflow: hidden;">
                <a href="../../Profile/Index/@userprofile.UserProfileId">
                    <img src="@Html.Encode(userprofile.PhotoUrl)" style="margin-left:auto; margin-right:auto; width:50px;"/></a>
            </div>
            <div style="margin-left: 8px; float: left; width: 88%; word-wrap: break-word">
                <a href="/Profile/Index/@userprofile.UserProfileId"><b>@userprofile.FirstName @userprofile.LastName</b></a><br />
                @if (currentUpdate.type == 3)
                {
                    //  <text>@currentUpdate.message @currentUpdate.UpdateId @Model.UserProfileId </text>
                    NoticeComment tempcomment = followPeersDB.NoticeComments.SingleOrDefault(p => p.commenterId == Model.UserProfileId && p.message == currentUpdate.message);
                    <text>@tempcomment.message</text>
                    Update tempupdate = followPeersDB.Updates.SingleOrDefault(p => p.UpdateId == tempcomment.update.UpdateId);
                    // UserProfile tempprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserProfileId == tempupdate.owner);
                    UserProfile tempprofile = tempupdate.UserProfiles.ElementAt(0);
                    <text>Commented: </text>@currentUpdate.message <text>on</text> <a style='cursor:pointer;' href='/Profile/Index/@tempprofile.UserProfileId'>@tempprofile.FirstName</a><text>'s
                              <a style='cursor:pointer;' href='/Notice/Index/@tempprofile.UserProfileId'>Notice Board</a></text>
                }
                else if (currentUpdate.type == 4)
                {
                    Update tempupdate = followPeersDB.Updates.SingleOrDefault(p => p.message == currentUpdate.message && p.type == 5);
                    int tempuserprofileID = tempupdate.UserProfiles.ElementAt(0).UserProfileId;
                    UserProfile tempprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserProfileId == tempuserprofileID);
                              
                    <text>Wrote: </text>@currentUpdate.message <text>on</text> <a style='cursor:pointer;' href='/Profile/Index/@tempprofile.UserProfileId'>@tempprofile.FirstName</a><text>'s
                              <a style='cursor:pointer;' href='/Notice/Index/@tempprofile.UserProfileId'>Notice Board</a></text>
                }
                else if (currentUpdate.type == 9)
                {
                    <span class="label label-info">Broadcast</span> <br /> @currentUpdate.message
                }
                else
                {@currentUpdate.message}
                <br />

                @{
                string id1 = "comment1" + @count;
                string time = "";
                TimeSpan temp = DateTime.Now - currentUpdate.Time;
                if (temp.Days > 1) { time += temp.Days.ToString() + " days ago"; }
                else if (temp.Hours > 1) { time += temp.Hours.ToString() + " hrs ago"; }
                else { time += temp.Minutes.ToString() + " mins ago"; }
                }
                <text style="color: #777">@time </text>

                @{                      
                //if it is a comment on other people's wall, dont allow commenting
                if (currentUpdate.type != 3 && currentUpdate.type != 4)
                {
                    <div style="background: #eee; padding: 5px 3px; margin-bottom: 5px;">
                        @{var commentslist = followPeersDB.NoticeComments.OrderBy(x => x.time);
                        }
                        @{foreach (NoticeComment cmt in commentslist)
                          {
                              if (cmt.update.UpdateId == currentUpdate.UpdateId)
                              {   <div style="border-bottom: 1px solid #ddd;">
                                                      @{
                                  IQueryable<UserProfile> custQuery2 = from cust in followPeersDB.UserProfiles where cust.UserProfileId == cmt.commenterId select cust;
                                  foreach (UserProfile user in custQuery2)
                                  {
                                                          <div style="float: left; margin: 3px; height: 30px; overflow: hidden;">
                                                              <img src="@Html.Encode(user.PhotoUrl)" style="margin-left:auto; margin-right:auto; width:30px;"/>
                                                          </div>
                                                          <div style="margin-left: 8px; float: left;">
                                                              <a href="/Profile/Index/@user.UserProfileId"><b>@user.FirstName @user.LastName</b></a><text> @cmt.message </text>
                                                          </div>
                                      
                                      if (user.UserProfileId == myprofile.UserProfileId)
                                      {<div id="mydiv" style="float: right; margin-right: 5px; color: #888; font-size: 15px; cursor: pointer;">@Html.ActionLink("x", "DeleteComment", "Notice", new { id = cmt.NoticeCommentId, redirect = Model.UserProfileId }, null)
                                                          </div>}
                                                          <div style="clear: both;">
                                                          </div>
                                  }
                                                      }
                                                  </div>
                              } //end of if
                          }
                        }
                        <form action="/Profile/AddComment" method="post" style="margin-bottom: 0px;">
                            <input type="hidden" name="commentid" value="@currentUpdate.UpdateId" />
                            <input type="hidden" name="redirect" value="@Model.UserProfileId" />
                            @{string id = "comment" + @count;}
                            <input id="@id" type="text" name="message" value="" style="width:97%;" />
                        </form>
                        <script type="text/javascript" language="javascript"> puthint("#@id", "Write a comment...");</script>
                        @{count++;}
                    </div>}
                }
            </div>
            <div style="clear: both;">
            </div>
        </div>
                    }


                }
            }




        }
    }

</div>
