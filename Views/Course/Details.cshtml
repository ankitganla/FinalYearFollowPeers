@model FollowPeers.Models.Course
@using FollowPeers.Models;
@{
    ViewBag.Title = "Course Details";
    FollowPeers.Models.FollowPeersDBEntities followPeersDB = new FollowPeers.Models.FollowPeersDBEntities();
    string name = Membership.GetUser().UserName;
    FollowPeers.Models.UserProfile myprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserName == name);
}

@Html.Partial("_Header")

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src=@Url.Content("~/Scripts/jquery.bgiframe.js") type="text/javascript"></script>
<script src=@Url.Content("~/Scripts/jquery.mcdropdown.js") type="text/javascript"></script>
<link rel="stylesheet" type="text/css" href="../../Content/css/jquery.mcdropdown.css" />
<div class="container">
    <div class="box">
        <div class="span9 main-content">
            <h3>@Model.CourseName</h3>
            <div>
                <h4>By @Html.DisplayFor(model => model.Owner.FirstName)</h4>
            </div>
            <div>
                <fieldset><legend>Description</legend></fieldset>
                @Html.DisplayFor(model => model.CourseDescription)

                <fieldset>
                    <legend>Details</legend>

                    <table>
                        <tr>
                            <td style="font-weight: bold">Starts:</td>
                            @if (Model.StartDate == null)
                            {
                                <td>@Html.Label("NA")</td>
                            }
                            else
                            {
                                <td>@Html.DisplayFor(model => model.StartDate)</td>
                            }
                        </tr>
                        <tr>
                            <td style="font-weight: bold">Ends:</td>
                            @if (Model.EndDate == null)
                            {
                                <td>@Html.Label("NA")</td>
                            }
                            else
                            {
                                <td>@Html.DisplayFor(model => model.EndDate)</td>
                            }
                        </tr>
                    </table>

                </fieldset>

                <fieldset>
                    <legend>Files & Other Links</legend>
                </fieldset>
            </div>

            @*<fieldset>
                <legend></legend>

                @{  

                    string path = HttpRuntime.AppDomainAppPath;
                    string newpath = path + "\\Content\\Files\\" + Model.Owner.UserName + "\\Courses\\" + Model.CourseName + "\\";
                    var directoryInfo = new DirectoryInfo(newpath);
                    if (directoryInfo.Exists)
                    {
                        string[] readtext = File.ReadAllLines(newpath + "uploadedList.txt");
                        if (readtext == null || readtext.Length == 0)
                        {
                                
                    <p>There are no uploaded files</p>
                                    
                        }

                        else
                        {
                    <p>Course Videos</p>
                            int LectureNumber = 1;
                            foreach (string fileName in readtext)
                            {
                                int dot = fileName.IndexOf(".");
                                if (dot > 0)
                                {
                                    string OnlyFileName = fileName.Substring(0, dot);
                            
                    <div>
                        <p>Lecture @LectureNumber: @OnlyFileName</p>
                        <video poster="http://www.dieckmann-aroma-kaffee.de/video/start_video_528.jpg" width="320" height="240" controls>
                            <source src="/Content/Files/@Model.Owner.UserName/Courses/@Model.CourseName/@fileName" type='video/mp4; codecs="avc1.42E01E, mp4a.40.2"'>
                        </video>
                    </div>
                               
                                }
                                LectureNumber += 1;
                            }
                        }
                    }
                        

                    
                       
                    <div>
                        @Html.ActionLink("Add Videos To This Course", "CourseAddVideo", new { id = Model.CourseId })
                    </div>
                    
                }

            </fieldset>*@
        </div>

        <div class="span3">
            <div class="scrollspy" data-spy="scroll" data-target=".navlist" style="margin-left: 5px">
                @{
                    if (myprofile.UserProfileId == Model.Owner.UserProfileId)
                    {
                    @Html.ActionLink("Edit", "Edit", new { id = Model.CourseId }) <text>|</text>
                    <button style="color:red; border:none; background: none; padding:0;" onclick="confirmDelete(@Model.CourseId, @Model.Owner.UserProfileId)">Delete</button>
                    
                    <br />
                    <br />
                    }

                    List<FollowPeers.Models.Favourite> AttendingCourses = followPeersDB.Favourites.Where(p => p.UserProfile.UserProfileId == myprofile.UserProfileId && p.ItemType == 13).ToList();
                    bool favMatched = false;

                    foreach (Favourite attending in AttendingCourses)
                    {
                        if (attending.ItemTypeId == Model.CourseId)
                        {
                            favMatched = true;
                            break;
                        }
                    }

                    if (favMatched == true)
                    { //attending this course
                    <form action="/Course/NotAttending" method="post" style="margin: 0">
                        <input type="hidden" name="id" value="@Model.CourseId" />
                        <span class="label label-default" style="background-color: white; color: black">
                            <input type="image" src="../../Content/images/icons/16x16/cross.png" value="submit" />
                            Will Not Attend
                        </span>
                    </form>
                        
                    }
                    else
                    { // not attending
                    <form action="/Course/Attending" method="post" style="margin: 0">
                        <input type="hidden" name="id" value="@Model.CourseId" />
                        <input type="hidden" name="courseName" value="@Model.CourseName" />
                        <span class="label label-default" style="background-color: white; color: black">
                            <input type="image" src="../../Content/images/icons/16x16/accept.png" value="submit" />
                            Attend Course
                        </span>
                    </form>
                        
                    }
                    <br />
                    <br />
                    
                    @*<span class="label label-default">Attending: @Model.attendingCount </span>*@
                    
                }
            </div>
        </div>

    </div>
</div>
@Html.Partial("_Footer")

<script type="text/javascript" language="javascript">
    function confirmDelete(pubId, ownerId) {
        var r = confirm("Are you sure you want to Delete this course?");
        if (r == true) {
            $.post("@Url.Action("Delete", "Course")", { id: pubId }, function () { window.location = "/Profile/Index/" + ownerId; });
        }
        else {
        }
    }
</script>
