@model FollowPeers.Models.UserProfile
@using FollowPeers.Models;

@*Page Header*@
@Html.Partial("_Header")

  <style media="screen" type="text/css">
        .profilepagetabs ul
        {
            padding: 0px;
            margin: 0px;
            margin-left: 0px;
            width: 180px;
        }

            .profilepagetabs ul li
            {
                display: block;
                height: auto;
                width: 180px;
                text-align: center;
                padding-top: 2px;
                padding-bottom: 2px;
            }

                .profilepagetabs ul li a
                {
                    /* The following four lines are to make the top left and top right corners of the content area rounded. */
                    -moz-border-radius-topleft: 4px;
                    border-top-left-radius: 4px;
                    -moz-border-radius-topright: 4px;
                    border-top-right-radius: 4px;
                    -moz-border-radius-bottomleft: 4px;
                    border-bottom-left-radius: 4px;
                    -moz-border-radius-bottomright: 4px;
                    border-bottom-right-radius: 4px;
                    margin-left: 0px;
                    padding-left: 10px;
                    padding-right: 10px;
                    border: solid;
                    border-width: 1px;
                    border-color: #45aeea;
                    font-weight: bold;
                    color: #45aeea;
                }

                    .profilepagetabs ul li a:hover
                    {
                        text-decoration: underline;
                    }


        .profilepagetabs li.current a
        {
            background-color: #45aeea;
            color: white;
        }
    </style>

@*Container*@
<div class="container">

    @*rows within container*@
    <div class="row">     

        @*Left Sidebar*@
        <div class="span2">
    @{
        ViewBag.Title = Model.FirstName + " " + Model.LastName + "'s Notice Board";
        FollowPeers.Models.FollowPeersDBEntities followPeersDB = new FollowPeers.Models.FollowPeersDBEntities();
        string name = Membership.GetUser().UserName;
        FollowPeers.Models.UserProfile myprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserName == name);
        if (Model.UserProfileId == myprofile.UserProfileId)
        {
        @Html.Partial("_SideBar_ProfilePage", new ViewDataDictionary { { "Name", myprofile.FirstName + " " + myprofile.LastName } })
        }
        else
        {
        @Html.Partial("_SideBar_ProfilePage", new ViewDataDictionary { { "PhotoUrl", @Model.PhotoUrl }, { "ProfileName", @Model.UserProfileId }, { "Name", @Model.FirstName + " " + Model.LastName } })
        }             
    }

    <div class="menu nav nav-tabs nav-stacked" style="list-style: none; margin-top: 15px;">
        <div class="profilepagetabs" style="border: none;">
            <!-- Nav tabs -->
            <ul class="menu nav nav-tabs nav-stacked" style="list-style: none; margin-top: 15px;">           
                <li class="current" id="li_all" onclick="tabresponse('all')"><a><i class="icon-home" style="float:left;"></i>All Updates</a></li>
                <li id="li_status" onclick="tabresponse('status')"><a><i class="icon-pencil" style="float:left;"></i>Status</a></li>
                <li id="li_photo" onclick="tabresponse('photo')"><a><i class="icon-picture" style="float:left;"></i>Photo</a></li>
                <li id="li_course" onclick="tabresponse('course')"><a><i class="icon-book" style="float:left;"></i>Course</a></li>                           
                <li id="li_publication" onclick="tabresponse('publication')"><a><i class="icon-file" style="float:left;"></i>Publication</a></li>
                <li id="li_job" onclick="tabresponse('job')"><a><i class="icon-tag" style="float:left;"></i>Job</a></li>
                <!--li id="li_group" onclick="tabresponse('group')"><a><i class="icon-user" style="float:left;"></i>Group</a></!--li-->
                <!--li id="li_favourite" onclick="tabresponse('favourite')"><a><i class="icon-heart" style="float:left;"></i>Favourite</a></!--li-->
            </ul>
        </div>
    </div> 
    </div>
    
        @*center div*@
        <div class="span7 main-content">
          
        @{
            //L: updates from people you are following.
            DateTime curr = System.DateTime.Now;
            //FollowPeers.Models.Update peerupdates;
            List<FollowPeers.Models.Relationship> following = followPeersDB.Relationships.Where(p => p.personAName == Model.UserName && p.tier == 2).ToList();     
        }
    <!-- Tab panes -->
        <div class="box" style="min-height: 200px; height: auto;">

            @Html.Partial("MultiInputBox")
            <br/>
            <!--h5><i class="icon-file"></i> Recent Updates</!--h5-->
               
            <div id="all">
                @Html.Partial("AllUpdatesView")
            </div>

            <div id="status" style="display: none;">
                @Html.Partial("StatusUpdatesView")
            </div>
            
            <div id="photo" style="display: none;">
                @Html.Partial("PhotoUpdatesView")        
            </div>
            
            <div id="course" style="display: none;">
                @Html.Partial("CourseUpdatesView")                       
            </div>
            
            <div id="publication" style="display: none;">
                @Html.Partial("PublicationUpdatesView")       
            </div>
            
            <div id="job" style="display: none;">
                @Html.Partial("JobUpdatesView")                          
            </div>
            
            @*<div id="favourite" style="display: none;">
                @Html.Partial("FavouriteUpdatesView")     
            </div>*@
        </div>
    </div>

        @*Right Sidebar*@
        <div class="peerlist" style="width: auto; float: right">


        @{
            Boolean click_flag = false;

            foreach (var peer in following)
            {
                DateTime curr1 = System.DateTime.Now;
                int peerupdate_count = 0;
                FollowPeers.Models.UserProfile peerprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserName == peer.personBName);

                if (!click_flag)
                {
                    peerupdate_count = followPeersDB.Updates.Where(p => p.owner == peerprofile.UserProfileId && p.Time.CompareTo(curr1) < 0).Count();
                }
                              
            <a href="/Profile/Index/@peerprofile.UserProfileId" style="text-decoration:none;">
                <div style=" padding: 2px 6px 2px 10px; line-height: 40px; height: 60px; background: #FFF; vertical-align: top; clear: both; _padding-right: 0px;">
                    <span class="label label-warning pull-left" style="display: block; width: 13px;">@peerupdate_count</span>
                        
                    <img src="@Html.Encode(peerprofile.PhotoUrl)" style="margin-left:auto; margin-right:auto; width:35px; height:35px;" class="img-circle" />                                <b>&nbsp;@peerprofile.FirstName @peerprofile.LastName</b>  
                </div>
            </a>
            }
            }


    </div>
          
    </div>
   
    @Html.Partial("_Footer")
    
</div>


@*Scripts*@
<script src="scripts/jquery.js"></script>
<script src="Scripts/bootstrap-dropdown.js"></script>
<script src="Scripts/bootstrap.js"></script>
<script>
    $('.dropdown-toggle').dropdown()
</script>
<script>
    $('#navbar').scrollspy()
</script>
<script src="scripts/bootstrap-fileupload.js"></script>
<script>

    $('.fileupload').fileupload()
</script>


<script type="text/javascript">
    //scripts for the tabs on home page
    function tabresponse(tab) {
        //document.getElementById('Form_Area').style.display = 'none'; //hide all forms
        document.getElementById('all').style.display = 'none';
        document.getElementById('status').style.display = 'none';
        document.getElementById('photo').style.display = 'none';
        document.getElementById('course').style.display = 'none';
        document.getElementById('publication').style.display = 'none';
        document.getElementById('job').style.display = 'none';
        //document.getElementById('group').style.display = 'none';
        //document.getElementById('favourite').style.display = 'none';
        document.getElementById('li_all').setAttribute("class", "");
        document.getElementById('li_status').setAttribute("class", "");
        document.getElementById('li_photo').setAttribute("class", "");
        document.getElementById('li_course').setAttribute("class", "");
        document.getElementById('li_publication').setAttribute("class", "");
        document.getElementById('li_job').setAttribute("class", "");
        //document.getElementById('li_group').setAttribute("class", "");
        //document.getElementById('li_favourite').setAttribute("class", "");



        if (tab == 'all') {

            document.getElementById('all').style.display = 'block';
            document.getElementById('li_' + tab).setAttribute("class", "active");
            document.getElementById('li_' + tab).setAttribute("class", "current");
        }

        if (tab == 'status') {
            document.getElementById('status').style.display = 'block';
            document.getElementById('li_' + tab).setAttribute("class", "active");
            document.getElementById('li_' + tab).setAttribute("class", "current");
        }

        if (tab == 'photo') {
            document.getElementById('photo').style.display = 'block';
            document.getElementById('li_' + tab).setAttribute("class", "active");
            document.getElementById('li_' + tab).setAttribute("class", "current");
        }

        if (tab == 'course') {
            document.getElementById('course').style.display = 'block';
            document.getElementById('li_' + tab).setAttribute("class", "active");
            document.getElementById('li_' + tab).setAttribute("class", "current");
        }

        if (tab == 'publication') {
            document.getElementById('publication').style.display = 'block';
            document.getElementById('li_' + tab).setAttribute("class", "active");
            document.getElementById('li_' + tab).setAttribute("class", "current");
        }

        if (tab == 'job') {
            document.getElementById('job').style.display = 'block';
            document.getElementById('li_' + tab).setAttribute("class", "active");
            document.getElementById('li_' + tab).setAttribute("class", "current");
        }
        
        @*if (tab == 'group') {
            document.getElementById('group').style.display = 'block';
            document.getElementById('li_' + tab).setAttribute("class", "active");
            document.getElementById('li_' + tab).setAttribute("class", "current");
        }

        if (tab == 'favourite') {
            document.getElementById('favourite').style.display = 'block';
            document.getElementById('li_' + tab).setAttribute("class", "active");
            document.getElementById('li_' + tab).setAttribute("class", "current");
        }*@

        else {
            return;
        }
    }
</script>


