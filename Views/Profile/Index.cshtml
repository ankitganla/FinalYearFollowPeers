@model FollowPeers.Models.UserProfile
@using FollowPeers.Models;
@{
    //at first, assume must check credentials, and assume all show is false.
    ViewBag.Title = ViewBag.Name;
    bool toCheck = true;
    bool showEmail = false;
    bool showPhone = false;
    bool showMobile = false;
    bool showAddress = false;
    bool showEducation = false;
    bool showPublication = false;
    bool showPatent = false;
    bool showAboutMe = false;
    bool showCourse = false;
    bool showEmployment = false;
    bool showNoticeBoard = false;
    FollowPeers.Models.FollowPeersDBEntities followPeersDB = new FollowPeers.Models.FollowPeersDBEntities();
    List<FollowPeers.Models.Achievement> myAchievements = followPeersDB.Achievements.Where(p => p.UserProfileId == Model.UserProfileId).ToList();
}

@if (Membership.GetUser().UserName == Model.UserName)
{
    toCheck = false; //if you are viewing your own profile, no need to check privacy
}
@{
    //tocheck true means this is not your profile
    if (toCheck == true)
    {
        string membername = Membership.GetUser().UserName;


        IQueryable<int> custQuery = from cust in followPeersDB.Relationships where cust.personAName == membername && cust.personBName == Model.UserName select cust.tier;

        //if such a member exists in the relationships, we can proceed to check access
        if (custQuery.Count() != 0)
        {
            //check if the user has tier1 access for the information of the profile
            foreach (int tier in custQuery)
            {
                FollowPeers.Models.Tier temp = Model.Tiers.SingleOrDefault(p => p.Level == tier);
                if (temp.Email == 1) { showEmail = true; }
                if (temp.Phone == 1) { showPhone = true; }
                if (temp.Mobile == 1) { showMobile = true; }
                if (temp.Address == 1) { showAddress = true; }
                if (temp.Education == 1) { showEducation = true; }
                if (temp.Publication == 1) { showPublication = true; }
                if (temp.Patent == 1) { showPatent = true; }
                if (temp.AboutMe == 1) { showAboutMe = true; }
                if (temp.Employment == 1) { showEmployment = true; }
                if (temp.Noticeboard == 1) { showNoticeBoard = true; }
            }
        }

        //else (meaning public view.. so check if the user has declared the information as public, or tier1. tier1 means must have access to see)
        //notice board will not be visible to someone not in the peers
        else
        {
            FollowPeers.Models.Tier temp = Model.Tiers.SingleOrDefault(p => p.Level == 1);
            if (temp.Email == 1) { showEmail = true; }
            if (temp.Phone == 1) { showPhone = true; }
            if (temp.Mobile == 1) { showMobile = true; }
            if (temp.Address == 1) { showAddress = true; }
            if (temp.Education == 1) { showEducation = true; }
            if (temp.Publication == 1) { showPublication = true; }
            if (temp.Patent == 1) { showPatent = true; }
            if (temp.AboutMe == 1) { showAboutMe = true; }
            if (temp.Employment == 1) { showEmployment = true; }

        }
    } 
}

<head>
    <title>Profile</title>
    <style media="screen" type="text/css">
        #profilepagetabs ul
        {
            padding: 0px;
            margin: 0px;
            margin-left: 0px;
            width: 180px;
        }

            #profilepagetabs ul li
            {
                display: block;
                height: auto;
                width: 180px;
                text-align: center;
                padding-top: 2px;
                padding-bottom: 2px;
            }

                #profilepagetabs ul li a
                {
                    /* The following four lines are to make the top left and top right corners of the content area rounded. */
                    -moz-border-radius-topleft: 4px;
                    border-top-left-radius: 4px;
                    -moz-border-radius-topright: 4px;
                    border-top-right-radius: 4px;
                    -moz-border-radius-bottomleft: 4px;
                    border-bottom-left-radius: 4px;
                    -moz-border-radius-bottomright: 4px;
                    border-bottom-right-radius: 4px;
                    margin-left: 0px;
                    padding-left: 10px;
                    padding-right: 10px;
                    border: solid;
                    border-width: 1px;
                    border-color: #45aeea;
                    font-weight: bold;
                    color: #45aeea;
                }

                    #profilepagetabs ul li a:hover
                    {
                        text-decoration: underline;
                    }


        #profilepagetabs li.current a
        {
            background-color: #45aeea;
            color: white;
        }
    </style>
</head>

<script type="text/javascript">

    function setswitch(sel) {
        var opt = sel.options[sel.selectedIndex].value;
        window.location = "#" + opt;
    }
</script>@*Header*@
@Html.Partial("_Header")
@*Container*@
<div class="container">

    @*rows within container*@
    <div class="row">

        <div class="span2">
            @*Left Sidebar*@
            @{
                string name = Membership.GetUser().UserName;
                FollowPeers.Models.UserProfile myprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserName == name);
                if (Model.UserProfileId == myprofile.UserProfileId)
                {
                @Html.Partial("_SideBar_ProfilePage", new ViewDataDictionary { { "Name", myprofile.FirstName + " " + myprofile.LastName } })
                }
                else
                {
                @Html.Partial("_SideBar_ProfilePage", new ViewDataDictionary { { "PhotoUrl", @Model.PhotoUrl }, { "ProfileName", @Model.UserProfileId }, { "Name", @Model.FirstName + " " + Model.LastName } })
 
                }
            
                <div id="profilepagetabs" style="border: none;">
                    <ul class="menu nav nav-tabs nav-stacked" style="list-style: none; margin-top: 15px;">
                        <li class="current" id="li_noticeboard" onclick="tabresponse('noticeboard')"><a>NOTICE BOARD</a></li>
                        <li id="li_photos" onclick="tab('photos')"><a>PHOTOS</a></li>
                        <li id="li_publications" onclick="tabresponse('publications')"><a>PUBLICATIONS</a></li>
                        <li id="li_jobs" onclick="tab('jobs')"><a>JOBS</a></li>
                        <li id="li_courses" onclick="tab('courses')"><a>COURSES</a></li>
                        <li id="li_about" onclick="tabresponse('about')"><a>ABOUT</a></li>
                    </ul>
                </div>
            }
        </div>

        <div class="span9 main-content">
            <div class="box">
                @if (Model.activated == true)
                {
                    
                    <div>
                        @Html.Partial("SimplePostBar")
                    </div>
                    
                    <div id="BasicInfo" style="float: right; width: 100px;">
                        @if (Membership.GetUser().UserName != Model.UserName)
                        {
                            if (ViewBag.Alreadyfollowed == 1)
                            {
                                using (Html.BeginForm("UnFollow", "Profile", new { url = HttpContext.Current.Request.Url.AbsoluteUri }))
                                {
                            <input type="hidden" name="username" value="@Model.UserName" />
                            <input type="submit" value="UnFollow" style="padding: 8px 20px; float: right; cursor: pointer; width: 90px; font-weight: bold;" />
                                }
                            }
                            else
                            {
                                using (Html.BeginForm("Follow", "Profile", new { url = HttpContext.Current.Request.Url.AbsoluteUri }))
                                {
                            <input type="hidden" name="username" value="@Model.UserName" />
                            <input type="submit" value="Follow" style="padding: 8px 20px; float: right; cursor: pointer; width: 90px; font-weight: bold;" />
                                }
                            }
                        }
                    </div>
                    
                    
                    <div id="noticeboard" style="display: block;">
                        @{
                        int count = 0;
                        if (toCheck == false || showNoticeBoard == true)
                        {
                            if (Model.Updates != null)
                            {
                                var newList = Model.Updates.OrderByDescending(x => x.Time).ToList();

                                foreach (var currentUpdate in newList)
                                {
                                    //need to display only own's updates
                                    if (currentUpdate.Own == true)
                                    {

                                        UserProfile userprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserProfileId == currentUpdate.owner);
                            <div style="border-bottom: 1px solid #eee; margin: 10px 0px; padding-top: 15px; padding-bottom: 5px; width: 100%">
                                <div style="float: left; height: 50px; overflow: hidden;">
                                    <a href="../../Profile/Index/@userprofile.UserProfileId">
                                        <img src="@Html.Encode(userprofile.PhotoUrl)" style="margin-left:auto; margin-right:auto; width:50px;"/></a>
                                </div>
                                <div style="margin-left: 8px; float: left; width: 88%; word-wrap: break-word">
                                    <a href="/Profile/Index/@userprofile.UserProfileId"><b>@userprofile.FirstName @userprofile.LastName</b></a><br />
                                    @if (currentUpdate.type == 3)
                                    {
                                        //  <text>@currentUpdate.message @currentUpdate.UpdateId @Model.UserProfileId </text>
                                        NoticeComment tempcomment = followPeersDB.NoticeComments.SingleOrDefault(p => p.commenterId == Model.UserProfileId && p.message == currentUpdate.message);
                                        <text>@tempcomment.message</text>
                                        Update tempupdate = followPeersDB.Updates.SingleOrDefault(p => p.UpdateId == tempcomment.update.UpdateId);
                                        // UserProfile tempprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserProfileId == tempupdate.owner);
                                        UserProfile tempprofile = tempupdate.UserProfiles.ElementAt(0);
                                        <text>Commented: </text>@currentUpdate.message <text>on</text> <a style='cursor:pointer;' href='/Profile/Index/@tempprofile.UserProfileId'>@tempprofile.FirstName</a><text>'s
                              <a style='cursor:pointer;' href='/Notice/Index/@tempprofile.UserProfileId'>Notice Board</a></text>
                                    }
                                    else if (currentUpdate.type == 4)
                                    {
                                        Update tempupdate = followPeersDB.Updates.SingleOrDefault(p => p.message == currentUpdate.message && p.type == 5);
                                        int tempuserprofileID = tempupdate.UserProfiles.ElementAt(0).UserProfileId;
                                        UserProfile tempprofile = followPeersDB.UserProfiles.SingleOrDefault(p => p.UserProfileId == tempuserprofileID);
                              
                                        <text>Wrote: </text>@currentUpdate.message <text>on</text> <a style='cursor:pointer;' href='/Profile/Index/@tempprofile.UserProfileId'>@tempprofile.FirstName</a><text>'s
                              <a style='cursor:pointer;' href='/Notice/Index/@tempprofile.UserProfileId'>Notice Board</a></text>
                                    }
                                    else if (currentUpdate.type == 9)
                                    {
                                        <span class="label label-info">Broadcast</span> <br /> @currentUpdate.message
                                    }
                                    else
                                    {@currentUpdate.message}
                                    <br />

                                    @{
                                    string id1 = "comment1" + @count;
                                    string time = "";
                                    TimeSpan temp = DateTime.Now - currentUpdate.Time;
                                    if (temp.Days > 1) { time += temp.Days.ToString() + " days ago"; }
                                    else if (temp.Hours > 1) { time += temp.Hours.ToString() + " hrs ago"; }
                                    else { time += temp.Minutes.ToString() + " mins ago"; }
                                    }
                                    <text style="color: #777">@time </text>

                                    @{                      
                                    //if it is a comment on other people's wall, dont allow commenting
                                    if (currentUpdate.type != 3 && currentUpdate.type != 4)
                                    {
                                        <div style="background: #eee; padding: 5px 3px; margin-bottom: 5px;">
                                            @{var commentslist = followPeersDB.NoticeComments.OrderBy(x => x.time);
                                            }
                                            @{foreach (NoticeComment cmt in commentslist)
                                              {
                                                  if (cmt.update.UpdateId == currentUpdate.UpdateId)
                                                  {   <div style="border-bottom: 1px solid #ddd;">
                                                      @{
                                                      IQueryable<UserProfile> custQuery2 = from cust in followPeersDB.UserProfiles where cust.UserProfileId == cmt.commenterId select cust;
                                                      foreach (UserProfile user in custQuery2)
                                                      {
                                                          <div style="float: left; margin: 3px; height: 30px; overflow: hidden;">
                                                              <img src="@Html.Encode(user.PhotoUrl)" style="margin-left:auto; margin-right:auto; width:30px;"/>
                                                          </div>
                                                          <div style="margin-left: 8px; float: left;">
                                                              <a href="/Profile/Index/@user.UserProfileId"><b>@user.FirstName @user.LastName</b></a><text> @cmt.message </text>
                                                          </div>
                                      
                                                          if (user.UserProfileId == myprofile.UserProfileId)
                                                          {<div id="mydiv" style="float: right; margin-right: 5px; color: #888; font-size: 15px; cursor: pointer;">@Html.ActionLink("x", "DeleteComment", "Notice", new { id = cmt.NoticeCommentId, redirect = Model.UserProfileId }, null)
                                                          </div>}
                                                          <div style="clear: both;">
                                                          </div>
                                                      }
                                                      }
                                                  </div>
                                                  } //end of if
                                              }
                                            }
                                            <form action="/Profile/AddComment" method="post" style="margin-bottom: 0px;">
                                                <input type="hidden" name="commentid" value="@currentUpdate.UpdateId" />
                                                <input type="hidden" name="redirect" value="@Model.UserProfileId" />
                                                @{string id = "comment" + @count;}
                                                <input id="@id" type="text" name="message" value="" style="width:97%;" />
                                            </form>
                                            <script type="text/javascript" language="javascript"> puthint("#@id", "Write a comment...");</script>
                                            @{count++;}
                                        </div>}
                                    }
                                </div>
                                <div style="clear: both;">
                                </div>
                            </div>
                                    }


                                }
                            }




                        }
                        }

                    </div>   
                    
                    <div id="publications" style="display: none;">
                        <br />
                        @Html.Partial("ProfilePublicationTabView", Model.Publication)
                    </div>
                    
                    <div id="about" style="display: none;">
                        @*<fieldset>

                            <legend>Personal</legend>

                            <div class="editor-label">
                                <p>Gender: @Html.Label(Model.Gender)</p>
                            </div>

                            <div class="editor-label">
                                <p>Marital Status: @Html.Label(Model.Status)</p>
                            </div>

                            <div class="editor-label">
                                @Html.Label(Model.Birthday)
                            </div>

                            <div class="editor-label">
                                @Html.Label(Model.Country)
                            </div>


                            <div class="editor-label" style="width: 100%;">
                                <label for="AboutMe">About Me</label>
                            </div>
                            <div class="editor-field" style="">
                                <p>@Model.AboutMe</p>
                            </div>
                        </fieldset>*@

                        @*<fieldset>

                            <legend>Contact Information</legend>
                            <div class="editor-label">
                                @Html.Label(Model.Contact.Street1)
                            </div>

                            <div class="editor-label">
                                @Html.Label(Model.Contact.Street2)
                            </div>

                            <div class="editor-label">
                                @Html.Label(Model.Contact.City)
                            </div>

                            <div class="editor-label">
                                @Html.Label(Model.Contact.Country)
                            </div>

                            <div class="editor-label">
                                @Html.Label(Model.Contact.Mobile)
                            </div>

                            <div class="editor-label">
                                @Html.Label(Model.Contact.Phone)
                            </div>

                            <div class="editor-label">
                                @Html.Label(Model.Contact.Fax)
                            </div>

                            <div class="editor-label">
                                @Html.Label(Model.Contact.Email)
                            </div>

                            <div class="editor-label">
                                @Html.Label(Model.Contact.Website)
                            </div>


                        </fieldset>*@




                        @*<div id="EducationFields">
                            <fieldset>
                                <legend>Education History</legend>

                                @foreach (var E in Model.Educations)
                                {
                                    <div style="font-variant-caps: all-small-caps;">
                                        @Html.Label(E.UniversityName)
                                    </div>
                           
                                    <div>
                                        @Html.Label(E.Degree)
                                    </div>
                            
                            

                           
                                }
                            </fieldset>

                        </div>*@

                        @*<fieldset>

                            <legend>Professional</legend>

                            <div class="editor-label">
                                @Html.Label(Model.Organization)
                            </div>


                            <div class="editor-label">
                                @Html.Label(Model.Departments)
                            </div>

                            <div id="Specialization" style="display: none; height: 22px;"></div>
                            <div class="editor-label">
                                @Html.Label(Model.Specializations)
                            </div>


                        </fieldset>*@

                        @if (Model.Specializations.Count() != 0)
                        {
                            <div id="Research" style="margin-bottom: 7px;">

                                <div style="font-weight: bold; border-radius: 4px; border: 1px solid #ccc; padding: 4px 10px; color: dimGray; background: #eee; margin-bottom: 5px; margin-bottom: 5px;">
                                    @if (Model.Profession != "Investor")
                                    {<text>Research Interests</text>}
                                    else
                                    {<text>Interest Industries</text>
                                    }
                                </div>
                                @{
                                    foreach (var S in Model.Specializations)
                                    {<a href="@Url.Content("~/Forum/CategoryDetail/?Category=" + @S.Field)">@S.Field</a> <text><br />
                                    </text>
                                    }}
                                <br />
                            </div>
                        }

                        //for premium, will deal with later
@*@if (Model.Profession == "Investor" && Model.Portfolios.Count() != 0)
                        {
                            <div id="Portfolio" style="">
                                <div style="font-weight: bold; border-radius: 4px; border: 1px solid #ccc; padding: 4px 10px; color: dimGray; background: #eee; margin-bottom: 5px; margin-bottom: 5px;">
                                    Companies Funded
                                </div>
                                <table>
                                    @{
                            foreach (var E in Model.Portfolios)
                            {
                                        <tr>

                                            <td><a href="http://@E.Website" target="_blank">@E.Name</a>  (@E.Status)<br />
                                                @E.BusinessField |  @E.Country<br />

                                                @E.MoreInfo
                                            </td>
                                        </tr>
                            }
                    
                                    }
                                </table>
                            </div>
                        }*@


                        @{
                        if ((toCheck == false || ((toCheck == true) && (showEducation == true))) && (Model.Educations.Count() != 0))
                        {
                            <div id="Education" style="">
                                <div style="font-weight: bold; border-radius: 4px; border: 1px solid #ccc; padding: 4px 10px; color: dimGray; background: #eee; margin-bottom: 5px; margin-bottom: 5px;">
                                    Education
                                </div>
                                <table>
                                    @{
                            foreach (var E in Model.Educations)
                            {
                                        <tr>
                                            <td style="width: 90px">@E.startYear - @E.endYear
                                            </td>
                                            <td>@E.Degree<br />
                                                <a href="/Profile/Search?organization=@E.UniversityName">@E.UniversityName</a>
                                                <br />
                                                @E.country
                                            </td>
                                        </tr>
                            }
                    
                                    }
                                </table>
                            </div>
                        }


                        if ((toCheck == false || ((toCheck == true) && (showEmployment == true))) && (Model.Employments.Count() != 0))
                        {
                            <div id="Employment" style="">
                                <div style="font-weight: bold; border-radius: 4px; border: 1px solid #ccc; padding: 4px 10px; color: dimGray; background: #eee; margin-bottom: 5px; margin-bottom: 5px;">
                                    Employment
                                </div>
                                <table>
                                    @{
                            foreach (var E in Model.Employments)
                            {
                                        <tr>
                                            <td style="width: 90px">@E.startYear - @E.endYear
                                            </td>
                                            <td>@E.Role at <a href="/Profile/Search?organization=@E.EmployerName">@E.EmployerName</a>
                                                <br />

                                                @E.Description
                                            </td>

                                        </tr>
                            }
                    
                                    }
                                </table>
                            </div>
                        }
                        
                        
                        
                            <div id="Students">
                                @{
                        if (@Model.Students.Count() != 0)
                        {
                                    <div style="font-weight: bold; border-radius: 4px; border: 1px solid #ccc; padding: 4px 10px; color: dimGray; background: #eee; margin-bottom: 5px; margin-bottom: 5px;">
                                        Students
                                    </div>
                                    <table>
                                        @{var newList = Model.Students.OrderBy(x => x.Type).ToList();}

                                        @foreach (var E in newList)
                                        {
                                            <tr>
                                                <td style="width: 90px">@{if (E.Type == 1)
                                                                          {<text>PhD Student</text>}
                                                                          else if (E.Type == 2)
                                                                          {<text>Master Student</text>}
                                                                          else if (E.Type == 3)
                                                                          {<text>Bachelor Student</text> }
                                                                          else
                                                                          {<text>Other Type</text> }
                                                }
                                                </td>
                                                <td>@{if (E.Link != 0)
                                                      {<a href='@E.Link'>@E.Name</a>}
                                                      else
                                                      {@E.Name}}
                                                    (@E.StartYear - @E.EndYear)<br />@E.About
                                                </td>
                                            </tr> 

                                        }
                                    </table> 
                        }
                                }
                            </div>

                        if (Model.Contact != null && Model.Contact.Country != null)
                        {
                            <div id="Contact" style="">
                                <div style="font-weight: bold; border-radius: 4px; border: 1px solid #ccc; padding: 4px 10px; color: dimGray; background: #eee; margin-bottom: 5px; margin-bottom: 5px;">
                                    Contact
                                </div>
                                <table>
                                    @if (Model.Contact.Street1 != null)
                                    {
                                        if (toCheck == false || ((toCheck == true) && (showAddress == true)))
                                        {
                                        <tr>
                                            <td style="width: 90px">Address
                                            </td>
                                            <td>
                                                @if (Model.Contact.Street1 != null)
                                                {@Model.Contact.Street1}@if (Model.Contact.Street2 != null)
                                                                        {<br />@Model.Contact.Street2}<br />
                                                @Model.Contact.City<br />@Model.Contact.Country
                                            </td>
                                        </tr>
                                        }
                                    }
                                    @if (Model.Contact.Mobile != null)
                                    {
                                        if (toCheck == false || ((toCheck == true) && (showMobile == true)))
                                        {
                                        <tr>
                                            <td>Mobile
                                            </td>
                                            <td>@Model.Contact.Mobile
                                            </td>
                                        </tr>
                                        }
                                    }
                                    @if (Model.Contact.Phone != null)
                                    {
                                        if (toCheck == false || ((toCheck == true) && (showPhone == true)))
                                        {
                                        <tr>
                                            <td>Phone
                                            </td>
                                            <td>@Model.Contact.Phone
                                            </td>
                                        </tr>
                                        }
                                    }
                                    @if (Model.Contact.Fax != null)
                                    {
                                        <tr>
                                            <td>Fax
                                            </td>
                                            <td>@Model.Contact.Fax
                                            </td>
                                        </tr>
                                    }
                                    @if (Model.Contact.Email != null)
                                    {
                                        if (toCheck == false || ((toCheck == true) && (showEmail == true)))
                                        {
                                        <tr>
                                            <td>Email
                                            </td>
                                            <td>@Model.Contact.Email
                                            </td>
                                        </tr>
                                        }
                                    }
                                    @if (Model.Contact.Website != null)
                                    {<tr>
                                        <td>Website
                                        </td>
                                        <td><a href="http://@Model.Contact.Website" target="_blank">@Model.Contact.Website</a>
                                        </td>
                                    </tr>
                                    }
                                </table>
                            </div>
                        }
 
                        }
                        @{if ((toCheck == false || ((toCheck == true) && (showPatent == true))) && (Model.Patent.Count() != 0))
                          { <div id="Patents" style="">
                              <div style="font-weight: bold; border-radius: 4px; border: 1px solid #ccc; padding: 4px 10px; color: dimGray; background: #eee; margin-bottom: 5px; margin-bottom: 5px;">
                                  Patent
                              </div>
                              <table>
                                  @{var patList = Model.Patent.OrderBy(x => x.Title).ToList();}
                                  @foreach (var E in patList)
                                  {
                                      <tr>
                                          <td style="width: 150px">Apply Year : @E.ApplyYear<br />
                                              Approve Year : @E.AproveYear
                                          </td>
                                          <td>
                                              <b>Title : @E.Title</b><br />
                                              <i>Reference No. : @E.RefNo</i><br />
                                          </td>
                                      </tr> 
                                  }
                              </table>
                          </div>
                          }
                        }
                        @{if (Model.Courses.Count() != 0)
                          {<div id="Courses" style="">
                              <div style="font-weight: bold; border-radius: 4px; border: 1px solid #ccc; padding: 4px 10px; color: dimGray; background: #eee; margin-bottom: 5px; margin-bottom: 5px;">
                                  Courses
                              </div>
                              <table>
                                  @{var courseList = Model.Courses.OrderBy(c => c.CourseName).ToList();}
                                  @foreach (var c in courseList)
                                  {
                                      <tr>
                                          <td style="width: 90px">Name
                                           <br />
                                              Description
                                           <br />
                                              Start Date
                                           <br />
                                              End Date  
                                           <br />
                                          </td>
                                          <td>
                                              <b>@c.CourseName</b><br />
                                              @c.CourseDescription<br />
                                              <i>@c.StartDate</i><br />
                                              <i>@c.EndDate</i><br />

                                          </td>
                                      </tr> 
                                  }
                              </table>
                          </div>
                          }
                        }


                        @{if ((toCheck == false || ((toCheck == true) && (showAboutMe == true))))
                          {
                            <div id="AboutMe" style="">
                                <div style="font-weight: bold; border-radius: 4px; border: 1px solid #ccc; padding: 4px 10px; color: dimGray; background: #eee; margin-bottom: 5px;">
                                    More About Me
                                </div>
                                @Html.Raw(Model.AboutMe)
                            </div>
                          }
                        }




                        @if (myAchievements.Count > 0 && (followPeersDB.Relationships.Where(p => p.personAName == myprofile.UserName).ToList().Count() > 0 || myprofile.UserProfileId == Model.UserProfileId))
                        {

                            <div style="font-weight: bold; border-radius: 4px; border: 1px solid #ccc; padding: 4px 10px; color: dimGray; background: #eee; margin-bottom: 5px; margin-bottom: 5px; margin-top: 15px">
                                Achievements
                            </div>
                       
                            <table class="table table-striped">
                                <thead>
                                    <tr>

                                        <th>Title</th>
                                        <th>Description</th>
                                        <th>Likes</th>
                                        <th></th>
                                        <th></th>
                                    </tr>
                                </thead>

                                @foreach (var Ach in myAchievements)
                                {
                              
                                    <tbody>
                                        @if (myprofile.UserProfileId != Model.UserProfileId && Ach.UserProfile.UserProfileId == Model.UserProfileId)
                                        {
                             
                                            <tr>

                                                <td>@Ach.Title</td>
                                                <td>@Ach.Description</td>



                                                @if (@Ach.like == 0)
                                                {
                                                    <td><span class="label label-default">0  
                                                        <img src="../../Content/images/icons/16x16/thumb_up.png" />
                                                    </span></td>
                                                }

                                                else
                                                {
                                                    <td><span class="label label-info">@Ach.like
                                                        <img src="../../Content/images/icons/16x16/thumb_up.png" />
                                                    </span></td>
                                                }

                                                <td>@using (Html.BeginForm("like", "Profile", new { url = HttpContext.Current.Request.Url.AbsoluteUri }))
                                                    {
                                                    <input type="hidden" name="username" value="@Model.UserName" />
                                                    <input type="hidden" name="achievementid" value="@Ach.AchievementId" />
                                                
                                                        if (followPeersDB.AchievementLikes.SingleOrDefault(p => p.AchievementId == Ach.AchievementId && p.UserProfileId == myprofile.UserProfileId && p.Type != 6) == null)
                                                        {
                                                    <div class="btn-group">
                                                        <button class="btn btn-mini" type="submit" value="" style="width: 50px">
                                                            <span class="">
                                                                <img src="../../Content/images/icons/16x16/thumb_up.png" />
                                                                +1 </span>
                                                        </button>
                                                    </div>
                                                        }
                                                        else
                                                        {
                                                    <div class="btn-group">
                                                        <button class="btn btn-mini" type="submit" value="" style="width: 50px">
                                                            <span class="">
                                                                <img src="../../Content/images/icons/16x16/thumb_down.png" />
                                                                -1 </span>
                                                        </button>
                                                    </div>
                                                        }
                                                    }


                                                </td>
                                                @if (@Ach.Link.Trim() != "NA" && @Ach.Link.Trim() != null)
                                                {
                                                    <td><a href="@Ach.Link"><span class="label label-info">
                                                        <img src="../../Content/images/icons/16x16/download.png" /></span></a></td>
                                                }
                                                else
                                                {
                                                    <td></td>
                                                }


                                            </tr>
                                    

                                        }


                                        else if (myprofile.UserProfileId == Model.UserProfileId && Ach.UserProfileId == Model.UserProfileId)
                                        {
                                            <tr>

                                                <td>@Ach.Title</td>
                                                <td>@Ach.Description</td>


                                                @if (@Ach.like == 0)
                                                {
                                                    <td><span class="label label-default">0
                                                        <img src="../../Content/images/icons/16x16/thumb_up.png" />
                                                    </span></td>
                                                }

                                                else
                                                {
                                                    <td><span class="label label-info">@Ach.like
                                                        <img src="../../Content/images/icons/16x16/thumb_up.png" />
                                                    </span></td>
                                                }
                                                @if (@Ach.Link.Trim() != "NA" && @Ach.Link.Trim() != null)
                                                {
                                                    <td><a href="@Ach.Link"><span class="label label-info">
                                                        <img src="../../Content/images/icons/16x16/download.png" /></span></a></td>
                                                }
                                                else
                                                {
                                                    <td></td>
                                                }

                                            </tr>
                                     
                                        }

                                    </tbody>
                                }
                            </table>
                        }


                    </div>   
           
                }

                else
                {
                    <div style="font-weight: bold; border-radius: 4px; border: 1px solid #ccc; padding: 4px 10px; color: dimGray; background: #eee; margin-bottom: 5px; margin-bottom: 5px;">
                        User Account is not activated.
                    </div>
            
                }
            </div>
        </div>

        @*<div class="span2 right-sidebar">
            @Html.Partial("_ProfilepageRightSidebar")
        </div>*@
    </div>
    <div class="row">
        @Html.Partial("_Footer")
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        function filterPath(string) {
            return string
              .replace(/^\//, '')
              .replace(/(index|default).[a-zA-Z]{3,4}$/, '')
              .replace(/\/$/, '');
        }
        var locationPath = filterPath(location.pathname);
        var scrollElem = scrollableElement('html', 'body');

        $('a[href*=#]').each(function () {
            var thisPath = filterPath(this.pathname) || locationPath;
            if (locationPath == thisPath
            && (location.hostname == this.hostname || !this.hostname)
            && this.hash.replace(/#/, '')) {
                var $target = $(this.hash), target = this.hash;
                if (target) {
                    var targetOffset = $target.offset().top;
                    $(this).click(function (event) {
                        event.preventDefault();
                        $(scrollElem).animate({ scrollTop: targetOffset }, 400, function () {
                            location.hash = target;
                        });
                    });
                }
            }
        });

        // use the first element that is "scrollable"
        function scrollableElement(els) {
            for (var i = 0, argLength = arguments.length; i < argLength; i++) {
                var el = arguments[i],
                    $scrollElement = $(el);
                if ($scrollElement.scrollTop() > 0) {
                    return el;
                } else {
                    $scrollElement.scrollTop(1);
                    var isScrollable = $scrollElement.scrollTop() > 0;
                    $scrollElement.scrollTop(0);
                    if (isScrollable) {
                        return el;
                    }
                }
            }
            return [];
        }

    });

</script>


<script type="text/javascript">
    //scripts for the tabs on profile page
    function tabresponse(tab) {
        //document.getElementById('Form_Area').style.display = 'none'; //hide all forms
        document.getElementById('noticeboard').style.display = 'none';
        document.getElementById('about').style.display = 'none';
        document.getElementById('publications').style.display = 'none';
        document.getElementById('li_noticeboard').setAttribute("class", "");
        document.getElementById('li_about').setAttribute("class", "");
        document.getElementById('li_publications').setAttribute("class", "");


        if (tab == 'noticeboard') {

            document.getElementById('noticeboard').style.display = 'block';
            document.getElementById('li_' + tab).setAttribute("class", "active");
            document.getElementById('li_' + tab).setAttribute("class", "current");


        }

        if (tab == 'about') {
            document.getElementById('about').style.display = 'block';
            document.getElementById('li_' + tab).setAttribute("class", "active");
            document.getElementById('li_' + tab).setAttribute("class", "current");


        }

        if (tab == 'publications') {
            document.getElementById('publications').style.display = 'block';
            document.getElementById('li_' + tab).setAttribute("class", "active");
            document.getElementById('li_' + tab).setAttribute("class", "current");

        }



        else {
            return;
        }
    }
</script>

